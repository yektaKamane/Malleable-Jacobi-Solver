#!/bin/sh

syntax() {
  echo ''
  echo 'Usage: build <target> <version> [charmc-options ...]'
#  echo ''
  echo '<targets>: converse, charm++ libs ampi IDL tsm sm pvm sdag bluegene'
  echo '<targets>: doc ps-doc pdf-doc html-doc'
  echo '<versions>: ' 
  ( cd src ; ls -1 | egrep -v '(^Common)|(^CVS)|(^QuickThreads)|(^ccs-client)' | pr -3 -t )
#  echo ''
  echo 'example <charmc-options>: -g -save -verbose'
  echo 'Note: This script is trivial.  It'
  echo ' 1. Creates directories <version> and <version>/tmp';
#  echo ' 2. Copies src/Common/scripts/Makefile into <version>/tmp';
  echo ' 2. Does a "make <target> <version> OPTS=<charmc-options>" in <version>/tmp.'
#  echo "That's all build does.  The rest is handled by the Makefile."
  exit 1
}

  [ $# -lt 2 ] && syntax

MAKEOPTS=""
OPTS=""

while [ ! $# -eq 0 ]
do
  case "$1" in
    -*) 
          MAKEOPTS="$MAKEOPTS $1"; shift
	  ;;
    *)
          PROGRAM=$1 ; shift
          VERSION=$1 ; shift
          while [ ! $# -eq 0 ]
          do
            OPTS="$OPTS $1"; shift
	  done
	  ;;
  esac
done

[ "x$VERSION" = "x" ] && syntax
	
( echo $VERSION | egrep -s '^Common' ) && syntax
[ -d src/$VERSION ] || goto syntax

[ -d $VERSION ] || echo "Creating dir: $VERSION" 
[ -d $VERSION ] || mkdir $VERSION
[ -d $VERSION/tmp ] || echo "Creating dir: $VERSION/tmp" 
[ -d $VERSION/tmp ] || mkdir $VERSION/tmp
echo "Copying src/Common/scripts/Makefile to $VERSION/tmp"
rm -f $VERSION/tmp/Makefile

if [ "x_`echo $VERSION | awk -F- '{print $2}'`" = "x_win32" ]
then
#Win32 version needs special compilers and *copied* (not linked)
# source files.
	echo "Copying compilers for win32 into cygwin /bin directory"
	cp src/Common.win32/unix2nt* /bin
	cp src/Common.win32/system_ln $VERSION/tmp
	cp src/Common.win32/unistd.h $VERSION/tmp
else
	cat > $VERSION/tmp/system_ln <<EOF
#!/bin/sh
ln -f -s \$@
EOF
fi

chmod +x $VERSION/tmp/system_ln
ln -s "../../src/Common/scripts/Makefile" $VERSION/tmp/Makefile

echo "Performing 'make $MAKEOPTS $PROGRAM OPTS="$OPTS"' in $VERSION/tmp"
cd $VERSION/tmp ; make $MAKEOPTS $PROGRAM OPTS="$OPTS"
