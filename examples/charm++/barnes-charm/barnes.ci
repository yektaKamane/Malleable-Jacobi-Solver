mainmodule barnes {
  readonly CProxy_Main mainChare;
  readonly CProxy_TreePiece pieces;
  readonly CProxy_ParticleChunk chunks;
  readonly int numInitTreePieces;
  readonly int numParticleChunks;
  
  readonly int NPROC;
  readonly int maxmybody;
  readonly real fcells;
  readonly real fleaves;
  readonly real tstop;
  readonly int nbody;
  readonly real dtime;
  readonly real eps;
  readonly real tol;
  readonly real dtout;
  readonly real dthf;
  readonly vector rmin;
  readonly real rsize;


  message ParticleMsg{
    bodyptr particles[];
  };

  mainchare [migratable] Main {
    entry Main();
    entry [threaded] void startSimulation();
  };

  array [1D] TreePiece {
    entry TreePiece(); 
    entry TreePiece(nodeptr p, int which, bool isTopLevel, int level); 
    entry void recvParticles(ParticleMsg *msg);
    entry void recvTotalMsgCountsFromChunks(CkReductionMsg *msg);
    entry void recvTotalMsgCountsFromPieces(int totalNumFromParent);
  };

  array [1D] ParticleChunk {
    entry ParticleChunk(int n1, int n2);
    entry void SlaveStart(CmiUInt8 mybodytab, CmiUInt8 bodytab, CkCallback &cb);
    entry void startIteration(CkCallback &cb);
    entry void acceptRoot(cellptr);
    entry void stepsystemPartII(CkReductionMsg *msg);
    entry void stepsystemPartIII(CkReductionMsg *msg);
    entry void doneTreeBuild();
  };

  // initproc void registerChunksToPiecesReducer(); 
};
