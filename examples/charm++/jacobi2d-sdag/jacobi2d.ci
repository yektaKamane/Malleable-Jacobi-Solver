mainmodule jacobi2d {

  readonly CProxy_Main mainProxy;
  readonly int arrayDimX;
  readonly int arrayDimY;
  readonly int blockDimX;
  readonly int blockDimY;

  readonly int num_chare_x;
  readonly int num_chare_y;

  readonly int globalBarrier;

  mainchare Main {
    entry Main(CkArgMsg *m);
    entry void report();
  };

  array [2D] Jacobi {
    entry Jacobi(void);
    entry void begin_iteration(void);
    entry void receiveGhosts(int iter, int dir, int size,
                             double ghosts[size]);

    entry void doStep() {
      atomic "begin_iteration" {
	begin_iteration();
      }
      for(imsg = 0; imsg < 4; imsg++) {
	// "iterations" keeps track of messages across steps
	when
          receiveGhosts[iterations] (int iter, int dir, int size,
	  			     double ghosts[size])
	  atomic "process ghosts" {
            processGhosts(dir, size, ghosts);
          }
      }
      atomic "doWork" {
	check_and_compute();
      }
    };
  };
};
