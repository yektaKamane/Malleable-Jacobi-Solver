module ControlPoints {

  readonly CProxy_controlPointManager controlPointManagerProxy;
  readonly int random_seed;
  readonly long controlPointSamplePeriod;
  readonly int whichTuningScheme;
  readonly bool shouldGatherMemoryUsage;
  readonly bool shouldGatherUtilization;


  initproc void registerCPReductions(void);	


 message controlPointMsg { 
 	 char data[];
 };


 message redistributor2DMsg {  
	double data[]; 
 }; 
 

  mainchare controlPointMain {
    entry controlPointMain(CkArgMsg*);
  };

 initnode void controlPointInitNode();

 group controlPointManager {
    entry controlPointManager();

    entry void requestMemoryUsage(CkCallback cb);
    entry void gatherMemoryUsage(CkReductionMsg *msg);

    entry void requestIdleTime(CkCallback cb);
    entry void gatherIdleTime(CkReductionMsg *msg);

 }   


 
  array [2D] redistributor2D {
   entry redistributor2D(void);

   entry void startup();	
   
    entry void resizeGranules(int, int);
    entry void receiveTransposeData(redistributor2DMsg *msg);

  } 




};
