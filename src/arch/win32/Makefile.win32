COMMON_SRC = .
CONVLIBS_SRC = .\libs\conv-libs

LIBS_DIR = ..\lib
XLATI_DIR = ..\bin
HOST_DIR = ..\bin

INC = /I"$(COMMON_SRC)"

CPP_PROJ=/nologo /MT /W3 /GX /Z7 /Od $(INC)\
 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /YX \
 /Fo /FD /c

SEQCPP_PROJ=/nologo /ML /W3 /GX /Z7 /Od $(INC) \
 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /YX \
 /Fo /FD /c

CPP = cl.exe
LINK = link.exe
LIBR = lib.exe
LINK_FLAGS = /nologo 

CHARMXI=$(XLATI_DIR)\charmxlati.exe

LINK_OTHER = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib \
 advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib \
 odbccp32.lib /subsystem:console /incremental:no /machine:I386 

ALL: CHARM++ AMPI

CHARM++ : CONVERSE TRANSLATORS LIBS

TRANSLATORS : $(CHARMXI) CONVCPM

AMPI: CHARM++ $(LIBS_DIR)\libampi.lib $(LIBS_DIR)\libampif.lib

.SILENT:
LIBS : CONVLIBS CHARMLIBS
	 @echo Nothing to do here right now.

###############################################################################
#
# The basics (bin, lib, include, headers)
#
###############################################################################

ALLHEADERS=charm++.h ckstream.h charm.h cpthreads.h converse.h \
	conv-trace.h conv-mach.h trace.h \
	ckarray.h pup.h ckreduction.h ckhashtable.h \
	idl.h tempo.h waitqd.h LBDatabase.h \
	lbdb.h LBDBManager.h LBComm.h LBOM.h LBObj.h LBMachineUtil.h \
	Refiner.h ObjGraph.h CentralLB.h RandCentLB.h \
	RecBisectBfLB.h graph.h fifoInt.h bitvecset.h \
	RefineLB.h MetisLB.h Comm1LB.h \
	HeapCentLB.h Set.h elements.h heap.h conv-ccs.h \
	NborBaseLb.h NeighborLB.h \
	WSLB.h CkLists.h GreedyRefLB.h RandRefLB.h CommLB.h CommLBHeap.h \
	ampi.h ampif.h

BASICS : DIRSSOURCES $(ALLHEADERS)
	@echo off
	@if exist ..\include\nul rd /s /q ..\include
	@xcopy /q /i *.h ..\include
	@if exist BASICS\nul rd /s /q BASICS
	@mkdir BASICS

DIRSSOURCES :
	@echo off
	@echo Gathering source code...
	@if exist ..\bin\nul       rd    /s /q  ..\bin
	@if exist ..\lib\nul       rd    /s /q  ..\lib
	@if exist ..\src\nul       rd    /s /q  ..\src
	@if exist ..\pgms\nul      rd    /s /q  ..\pgms
	@if exist ..\libsrc\nul    rd    /s /q  ..\libsrc
	@mkdir    ..\bin
	@mkdir    ..\lib
	@mkdir    ..\src
	@xcopy    /q /i /e /s ..\..\src\Common\libs libs
	@xcopy    /q /i /e /s ..\..\src\Common\libs ..\libsrc
	@if exist ..\pgms\nul    rd /s /q ..\pgms
	@xcopy    /q /i /e /s ..\..\pgms  ..\pgms  
	@mkdir    DIRSSOURCES

###############################################################################
#
# Converse Libraries
#
###############################################################################

CVHEADERS=converse.h conv-mach.h \
          ..\include\CkFutures.decl.h CkFutures.def.h \
          ..\include\CkArray.decl.h CkArray.def.h \
	  ..\include\CkReduction.decl.h CkReduction.def.h \
          ..\include\LBDatabase.decl.h LBDatabase.def.h \
          ..\include\CentralLB.decl.h CentralLB.def.h \
          ..\include\RandCentLB.decl.h RandCentLB.def.h \
          ..\include\MetisLB.decl.h MetisLB.def.h \
          ..\include\RefineLB.decl.h RefineLB.def.h \
          ..\include\HeapCentLB.decl.h HeapCentLB.def.h \
	  ..\include\RecBisectBfLB.decl.h RecBisectBfLB.def.h \
	  ..\include\NborBaseLB.decl.h NborBaseLB.def.h \
	  ..\include\NeighborLB.decl.h NeighborLB.def.h \
	  ..\include\WSLB.decl.h WSLB.def.h \
	  ..\include\GreedyRefLB.decl.h GreedyRefLB.def.h \
	  ..\include\RandRefLB.decl.h RandRefLB.def.h \
          ..\include\tempo.decl.h tempo.def.h \
          ..\include\waitqd.decl.h waitqd.def.h \
	  ..\include\CommLB.decl.h CommLB.def.h \
	  ..\include\Comm1LB.decl.h Comm1LB.def.h \
	  ..\include\ampi.decl.h ampi.def.h


TRACELIBS=libtrace-none.lib libtrace-projections.lib libtrace-summary.lib

CVLIBS=$(LIBS_DIR)\libconv-core.lib libconv-cplus-n.lib libconv-cplus-y.lib \
libldb-rand.obj libldb-spray.obj libldb-graph.obj libldb-test.obj $(TRACELIBS)


LIBCONV_CORE=threads.obj convcore.obj conv-conds.obj queueing.obj fifo.obj msgmgr.obj memory.obj \
cpm.obj cpthreads.obj futures.obj cldb.obj random.obj debug-message.obj debug-object.obj info.obj \
generate.obj edgelist.obj conv-ccs.obj quiescence.obj

CONVERSE : BASICS $(CVLIBS) CONV-HOST CONVLIBS DAEMON CONVCPM

DAEMON :
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\daemon.c
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\SocketReadAndWrite.c
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\sockRoutines.c
	$(LINK) $(LINK_FLAGS) ws2_32.lib advapi32.lib $(LINK_OTHER) \
	/out:"$(HOST_DIR)\daemon.exe" daemon.obj sockRoutines.obj SocketReadAndWrite.obj

CONV-HOST : conv-host.c
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\conv-host.c
	$(LINK) $(LINK_FLAGS) ws2_32.lib advapi32.lib $(LINK_OTHER)  /out:"$(HOST_DIR)\conv-host.exe" \
	conv-host.obj

CONVLIBS : MASTER-SLAVE PACKLIB COMMLIB

MASTER-SLAVE : $(CONVLIBS_SRC)\master-slave\cms.c
	$(CPP) $(CPP_PROJ) $(CONVLIBS_SRC)\master-slave\cms.c
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libcms.lib" cms.obj
	@if exist ..\include\cms.h del /q ..\include\cms.h
	@copy $(CONVLIBS_SRC)\master-slave\cms.h ..\include\cms.h

COMMOBJS=commlib.obj gridrouter.obj de.obj treerouter.obj petable.obj overlapper.obj \
	rsend.obj bcast.obj charm_bind.obj

COMMLIB : 
	@if exist ..\include\commlib.h del /q ..\include\commlib.h
	@copy  $(CONVLIBS_SRC)\commlib\commlib.h ..\include\commlib.h
	@xcopy /q $(CONVLIBS_SRC)\commlib\*.C .
	@xcopy /q $(CONVLIBS_SRC)\commlib\*.h .
	$(CPP) $(CPP_PROJ) /TP charm_bind.C
	$(CPP) $(CPP_PROJ) /TP commlib.C
	$(CPP) $(CPP_PROJ) /TP overlapper.C 
	$(CPP) $(CPP_PROJ) /TP treerouter.C 
	$(CPP) $(CPP_PROJ) /TP gridrouter.C 
	$(CPP) $(CPP_PROJ) /TP de.C 
	$(CPP) $(CPP_PROJ) /TP bcast.C 
	$(CPP) $(CPP_PROJ) /TP rsend.C 
	$(CPP) $(CPP_PROJ) /TP petable.C 
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libcomm.lib" \
	$(COMMOBJS)

PACKLIB :
	@if exist ..\include\PackLib.h del /q ..\include\PackLib.h
	@copy  $(CONVLIBS_SRC)\packlib\PackLib.h ..\include\PackLib.h
	@if exist ..\include\cpackLib.h del /q ..\include\cpackLib.h
	@copy  $(CONVLIBS_SRC)\packlib\cpackLib.h ..\include\cpackLib.h
	@xcopy /q  $(CONVLIBS_SRC)\packLib\*.C .
	@xcopy /q  $(CONVLIBS_SRC)\packLib\*.h .
	$(CPP) $(CPP_PROJ) /TP packc.C
	$(CPP) $(CPP_PROJ) /TP packf77.C
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libpacklib.lib" \
	packc.obj packf77.obj

$(LIBS_DIR)\libconv-core.lib : $(LIBCONV_CORE)
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libconv-core.lib" \
	$(LIBCONV_CORE)

libconv-cplus-y.lib : machine.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) /D "_LIB" /D"FOR_CPLUS=1" machine.c
	$(LINK) -lib $(LINK_FLAGS) /out:"$(LIBS_DIR)\libconv-cplus-y.lib" \
	machine.obj

libconv-cplus-n.lib : machine.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) /D"FOR_CPLUS=0" machine.c
	$(LINK) -lib $(LINK_FLAGS) /out:"$(LIBS_DIR)\libconv-cplus-y.lib" \
	machine.obj

cpm.obj : cpm.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\cpm.c

fifo.obj : fifo.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\fifo.c

threads.obj : threads.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) /I"QuickThreads" $(COMMON_SRC)\threads.c

convcore.obj : convcore.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\convcore.c

conv-ccs.obj : conv-ccs.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) $(COMMON_SRC)\conv-ccs.c

random.obj : random.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) random.c

queueing.obj : queueing.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) queueing.c

conv-conds.obj : conv-conds.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) conv-conds.c

futures.obj : futures.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) futures.c

msgmgr.obj : msgmgr.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) msgmgr.c

cpthreads.obj : cpthreads.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) cpthreads.c

memory.obj : memory.c $(CVHEADERS)
	$(CPP)$(CPP_PROJ) memory.c

edgelist.obj : edgelist.c typedefs.h $(CVHEADERS)
	$(CPP) $(CPP_PROJ) edgelist.c

generate.obj : generate.c typedefs.h $(CVHEADERS)
	$(CPP) $(CPP_PROJ) generate.c

cldb.obj : cldb.c cldb.h $(CVHEADERS)
	$(CPP) $(CPP_PROJ) cldb.c

quiescence.obj: quiescence.c $(CVHEADERS) 
	$(CPP) $(CPP_PROJ) quiescence.c

libldb-rand.obj : cldb.rand.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) cldb.rand.c
	@copy cldb.rand.obj ..\lib\libldb-rand.obj

libldb-graph.obj : cldb.graph.c cldb.graph.h $(CVHEADERS)
	$(CPP) $(CPP_PROJ) cldb.graph.c 
	@copy cldb.graph.obj ..\lib\libldb-graph.obj

libldb-spray.obj : cldb.spray.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ)  cldb.spray.c
	@copy cldb.spray.obj ..\lib\libldb-spray.obj

libldb-test.obj : cldb.test.c $(CVHEADERS)
	$(CPP) $(CPP_PROJ) cldb.test.c
	@copy cldb.test.obj ..\lib\libldb-test.obj

########################################################################################################
#
# CHARM LIBRARIES
#
########################################################################################################

CKHEADERS=ck.h ckstream.h envelope.h init.h qd.h charm.h charm++.h trace.h \
          ckfutures.h ckarray.h ckreduction.h ckhashtable.h tempo.h waitqd.h \
	  LBDatabase.h lbdb.h LBDBManager.h LBComm.h LBOM.h LBObj.h \
	  LBMachineUtil.h Refiner.h ObjGraph.h heap.h elements.h CommLBHeap.h \
	  CentralLB.h RandCentLB.h RecBisectBfLB.h RefineLB.h HeapCentLB.h MetisLB.h \
	  CommLB.h Comm1LB.h NborBaseLB.h NeighborLB.h WSLB.h GreedyRefLB.h RandRefLB.h CkLists.h \
	  ampi.h ampif.h \
	  $(CVHEADERS)

CK_LIBS_CORE=$(LIBS_DIR)\libck.lib

LIBCK_CORE=init.obj register.obj qd.obj ck.obj main.obj msgalloc.obj ckfutures.obj \
           ckarray.obj pup_util.obj pup_xlater.obj ckreduction.obj ckhashtable.obj \
	   tempo.obj waitqd.obj \
	   LBDatabase.obj lbdb.obj LBDBManager.obj LBComm.obj LBObj.obj CentralLB.obj \
	   LBMachineUtil.obj Refiner.obj ObjGraph.obj RecBisectBfLB.obj graph.obj \
	   bitvecset.obj fifoInt.obj \
	   RandCentLB.obj MetisLB.obj RefineLB.obj Set.obj CommLB.obj Comm1LB.obj \
	   HeapCentLB.obj heap.obj \
	   NborBaseLB.obj NeighborLB.obj WSLB.obj GreedyRefLB.obj RandRefLB.obj CommLBHeap.obj

CHARMLIBS : CONVERSE $(CK_LIBS_CORE)

$(CK_LIBS_CORE) : $(LIBCK_CORE)
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libck.lib" \
	$(LIBCK_CORE)

LIBTRACE_NONE=trace-none.obj

libtrace-none.lib : $(LIBTRACE_NONE)
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libtrace-none.lib" \
	$(LIBTRACE_NONE)

LIBTRACE_PROJ=trace-projections.obj

libtrace-projections.lib : $(LIBTRACE_PROJ)
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libtrace-projections.lib" \
	$(LIBTRACE_PROJ)

LIBTRACE_SUMM=trace-summary.obj

libtrace-summary.lib: $(LIBTRACE_SUMM)
	$(LIBR) $(LINK_FLAGS) /out:"$(LIBS_DIR)\libtrace-summary.lib" \
	$(LIBTRACE_SUMM)

..\include\CkArray.decl.h : CkArray.decl.h
	@copy CkArray.decl.h ..\include

..\include\LBDatabase.decl.h : LBDatabase.decl.h
	@copy LBDatabase.decl.h ..\include

..\include\CentralLB.decl.h : CentralLB.decl.h
	@copy CentralLB.decl.h ..\include

..\include\RandCentLB.decl.h : RandCentLB.decl.h
	@copy RandCentLB.decl.h ..\include

..\include\RecBisectBfLB.decl.h : RecBisectBfLB.decl.h
	@copy RecBisectBfLB.decl.h ..\include

..\include\MetisLB.decl.h : MetisLB.decl.h
	@copy MetisLB.decl.h ..\include

..\include\RefineLB.decl.h : RefineLB.decl.h
	@copy RefineLB.decl.h ..\include

..\include\CommLB.decl.h : CommLB.decl.h
	@copy CommLB.decl.h ..\include

..\include\Comm1LB.decl.h : Comm1LB.decl.h
	@copy Comm1LB.decl.h ..\include

..\include\HeapCentLB.decl.h : HeapCentLB.decl.h
	@copy HeapCentLB.decl.h ..\include

..\include\NborBaseLB.decl.h : NborBaseLB.decl.h
	@copy NborBaseLB.decl.h ..\include

..\include\NeighborLB.decl.h : NeighborLB.decl.h
	@copy NeighborLB.decl.h ..\include

..\include\WSLB.decl.h : WSLB.decl.h
	@copy WSLB.decl.h ..\include

..\include\GreedyRefLB.decl.h : GreedyRefLB.decl.h
	@copy GreedyRefLB.decl.h ..\include

..\include\RandRefLB.decl.h : RandRefLB.decl.h
	@copy RandRefLB.decl.h ..\include

..\include\CkFutures.decl.h : CkFutures.decl.h
	@copy CkFutures.decl.h ..\include

..\include\ampi.decl.h : ampi.decl.h
	@copy ampi.decl.h ..\include

ampi.decl.h ampi.def.h : ampi.ci $(CHARMXI)
	$(CHARMXI) -ansi ampi.ci

CkFutures.decl.h CkFutures.def.h : ckfutures.ci $(CHARMXI)
	$(CHARMXI) -ansi ckfutures.ci                      

..\include\tempo.decl.h : tempo.decl.h
	@copy tempo.decl.h ..\include

tempo.decl.h tempo.def.h : tempo.ci $(CHARMXI)
	$(CHARMXI) -ansi tempo.ci                         

..\include\waitqd.decl.h : waitqd.decl.h
	@copy waitqd.decl.h ..\include

waitqd.decl.h waitqd.def.h : waitqd.ci $(CHARMXI)
	$(CHARMXI) -ansi waitqd.ci     

..\include\CkReduction.decl.h : CkReduction.decl.h
	@copy CkReduction.decl.h ..\include

CkReduction.decl.h CkReduction.def.h : ckreduction.ci $(CHARMXI)
	$(CHARMXI) -ansi ckreduction.ci

CkArray.decl.h CkArray.def.h : ckarray.ci $(CHARMXI)
	$(CHARMXI) -ansi ckarray.ci

LBDatabase.decl.h LBDatabase.def.h : LBDatabase.ci $(CHARMXI)
	$(CHARMXI) -ansi LBDatabase.ci

CentralLB.decl.h Central.def.h : CentralLB.ci $(CHARMXI)
	$(CHARMXI) -ansi CentralLB.ci

RandCentLB.decl.h RandCent.def.h : RandCentLB.ci $(CHARMXI)
	$(CHARMXI) -ansi RandCentLB.ci

RecBisectBfLB.decl.h RandCent.def.h : RecBisectBfLB.ci $(CHARMXI)
	$(CHARMXI) -ansi RecBisectBfLB.ci

MetisLB.decl.h MetisLB.def.h : MetisLB.ci $(CHARMXI)
	$(CHARMXI) -ansi MetisLB.ci

RefineLB.decl.h RefineLB.def.h : RefineLB.ci $(CHARMXI)
	$(CHARMXI) -ansi RefineLB.ci

CommLB.decl.h CommLB.def.h : CommLB.ci $(CHARMXI)
	$(CHARMXI) -ansi CommLB.ci

Comm1LB.decl.h Comm1LB.def.h : Comm1LB.ci $(CHARMXI)
	$(CHARMXI) -ansi Comm1LB.ci

HeapCentLB.decl.h HeapCentLB.def.h : HeapCentLB.ci $(CHARMXI)
	$(CHARMXI) -ansi HeapCentLB.ci

NborBaseLB.decl.h NborBaseLB.def.h : NborBaseLB.ci $(CHARMXI)
	$(CHARMXI) -ansi NborBaseLB.ci

WSLB.decl.h WSLB.def.h : WSLB.ci $(CHARMXI)
	$(CHARMXI) -ansi WSLB.ci

GreedyRefLB.decl.h GreedyRefLB.def.h : GreedyRefLB.ci $(CHARMXI)
	$(CHARMXI) -ansi GreedyRefLB.ci

NeighborLB.decl.h NeighborLB.def.h : NeighborLB.ci $(CHARMXI)
	$(CHARMXI) -ansi NeighborLB.ci

RandRefLB.decl.h RandRefLB.def.h : RandRefLB.ci $(CHARMXI)
	$(CHARMXI) -ansi RandRefLB.ci

init.obj: init.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP init.C

msgalloc.obj: msgalloc.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP msgalloc.C

register.obj: register.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP register.C

ckfutures.obj: ckfutures.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ckfutures.C

tempo.obj: tempo.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP tempo.C

waitqd.obj: waitqd.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP waitqd.C

ckarray.obj: ckarray.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ckarray.C

ckreduction.obj: ckreduction.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ckreduction.C

ckhashtable.obj: ckhashtable.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ckhashtable.C

lbdb.obj: lbdb.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP lbdb.C

LBDBManager.obj: LBDBManager.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP LBDBManager.C

LBComm.obj: LBComm.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP LBComm.C

LBObj.obj: LBObj.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP LBObj.C

LBMachineUtil.obj: LBMachineUtil.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP LBMachineUtil.C

LBDatabase.obj: LBDatabase.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP LBDatabase.C

Refiner.obj: Refiner.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP Refiner.C

ObjGraph.obj: ObjGraph.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ObjGraph.C

CentralLB.obj: CentralLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP CentralLB.C

RandCentLB.obj: RandCentLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP RandCentLB.C

RecBisectBfLB.obj: RecBisectBfLB.C $(CKHEADERS) graph.h fifoInt.h bitvecset.h
	$(CPP) $(CPP_PROJ) /TP RecBisectBfLB.C

graph.obj: graph.c 
	$(CPP) $(CPP_PROJ) graph.c

fifoInt.obj: fifoInt.c 
	$(CPP) $(CPP_PROJ) fifoInt.c

bitvecset.obj: bitvecset.c 
	$(CPP) $(CPP_PROJ) bitvecset.c

MetisLB.obj: MetisLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP MetisLB.C

RefineLB.obj: RefineLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP RefineLB.C

CommLB.obj: CommLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP CommLB.C

Comm1LB.obj: Comm1LB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP Comm1LB.C

HeapCentLB.obj: HeapCentLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP HeapCentLB.C

Set.obj: Set.C $(CKHEADERS) Set.h elements.h 
	$(CPP) $(CPP_PROJ) /TP Set.C

heap.obj: heap.C $(CKHEADERS) elements.h heap.h
	$(CPP) $(CPP_PROJ) /TP heap.C

CommLBHeap.obj: CommLBHeap.C $(CKHEADERS) CommLBHeap.h
	$(CPP) $(CPP_PROJ) /TP CommLBHeap.C

NborBaseLB.obj: NborBaseLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP NborBaseLB.C

NeighborLB.obj: NeighborLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP NeighborLB.C

WSLB.obj: WSLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP WSLB.C

GreedyRefLB.obj: GreedyRefLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP GreedyRefLB.C

RandRefLB.obj: RandRefLB.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP RandRefLB.C

qd.obj: qd.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP qd.C

main.obj: main.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP main.C

debug-object.obj: debug-object.h debug-object.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP debug-object.C

debug-message.obj: debug-message.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP debug-message.C

info.obj: info.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP info.C

ck.obj: ck.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP ck.C

pup_util.obj: pup_util.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP pup_util.C

pup_xlater.obj: pup_xlater.C $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP pup_xlater.C

trace-none.obj : trace-none.C trace.h $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP trace-none.C

trace-projections.obj : trace-projections.C trace-projections.h trace.h $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP trace-projections.C

trace-summary.obj : trace-summary.C trace-summary.h trace.h $(CKHEADERS)
	$(CPP) $(CPP_PROJ) /TP trace-summary.C

###############################################################################
#
# The interface translator
#
###############################################################################

XIHEADERS=xi-symbol.h xi-grammar.tab.h xi-util.h
CHARMXLATI=xi-main.obj xi-symbol.obj xi-grammar.tab.obj xi-scan.obj xi-util.obj

CONVCPM: conv-cpm.c
	$(CPP) $(SEQCPP_PROJ) conv-cpm.c
	$(LINK) $(LINK_FLAGS) $(LINK_OTHER) /out:"$(XLATI_DIR)\conv-cpm.exe" conv-cpm.obj

$(CHARMXI): $(CHARMXLATI)
	$(LINK) $(LINK_FLAGS) /out:"$(XLATI_DIR)\charmxlati.exe" \
	$(CHARMXLATI)

xi-main.obj :                                         
	$(CPP) $(SEQCPP_PROJ) /TP $(COMMON_SRC)\xi-main.C

xi-symbol.obj :                                       
	$(CPP) $(SEQCPP_PROJ) /TP $(COMMON_SRC)\xi-symbol.C

xi-util.obj :                                       
	$(CPP) $(SEQCPP_PROJ) /TP $(COMMON_SRC)\xi-util.C

xi-grammar.tab.obj :                                
	$(CPP) $(SEQCPP_PROJ) /TP $(COMMON_SRC)\xi-grammar.tab.C

xi-scan.obj :                                          
	$(CPP) $(SEQCPP_PROJ) /TP /DYY_NEVER_INTERACTIVE $(COMMON_SRC)\xi-scan.C

.IGNORE:	 
CLEAN :
	rd /s /q BASICS
	rd /s /q DIRSSOURCES 
	rd /s /q libs
	del   /q *.obj
	del   /q vc60.*

VERYCLEAN : CLEAN
	rd /s /q ..\bin
	rd /s /q ..\lib
	rd /s /q ..\pgms
	rd /s /q ..\libsrc
	rd /s /q ..\include
	rd /s /q ..\src

