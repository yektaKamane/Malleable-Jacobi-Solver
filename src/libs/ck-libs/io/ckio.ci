module CkIO {
  namespace Ck { namespace IO {
      message FileReadyMsg;
      message SessionReadyMsg;
      message SessionCommitMsg;

      namespace impl {
        readonly CProxy_Director director;

        mainchare Director
        {
          entry Director();

          /// Serialize setting up each file through this chare, so that all PEs
          /// have the same sequence
          entry void openFile(std::string name, CkCallback opened, Options opts);

          entry void prepareWriteSession(FileToken file, size_t bytes, size_t offset,
                                         CkCallback ready, CkCallback complete);
        }

        group Manager
        {
          entry Manager();
          entry void openFile(FileToken token, std::string name,
                              CkCallback opened, Options opts);
        };

        array [1D] WriteSession
        {
          entry WriteSession(FileToken file, size_t offset, size_t bytes,
                             CkCallback complete);
          entry void forwardData(size_t offset, size_t bytes,
                                 const char data[bytes]);
        };
      }
    }
  }
}
