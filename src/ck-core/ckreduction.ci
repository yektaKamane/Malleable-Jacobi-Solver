module CkReduction {
  
//Group object creation support:
  message CkGroupCallbackMsg;
  group CkGroupInitCallback {
  	entry CkGroupInitCallback(void);
	entry void callMeBack(CkGroupCallbackMsg *);
  };
  group CkGroupReadyCallback {
  	entry CkGroupReadyCallback(void);
	entry void callMeBack(CkGroupCallbackMsg *);
  };
  
  message CkReductionMsg;
  message CkReductionNumberMsg;
  
  group CkReductionMgr : CkGroupInitCallback {
  	entry CkReductionMgr(void);

	//Sent down the reduction tree (used by barren PEs)
	entry  void ReductionStarting(CkReductionNumberMsg *);
	//Sent up the reduction tree with reduced data
	entry  void RecvMsg(CkReductionMsg *);
	//Sent to root of the reduction tree with late migrant data
	entry  void LateMigrantMsg(CkReductionMsg *);
	//A late migrating contributor will never contribute
	entry  void MigrantDied(CkReductionNumberMsg *);

	//call back for using NodeGroup Reductions added by sayantan
	entry void ArrayReductionHandler(CkReductionMsg *m);
  };

  nodegroup CkNodeReductionMgr : IrrGroup {
  	entry CkNodeReductionMgr(void);

	//Sent down the reduction tree (used by barren PEs)
	entry  void ReductionStarting(CkReductionNumberMsg *);
	//entry  void ReductionStarting(CkReductionNumberMsg *);

	//Sent up the reduction tree with reduced data
	//entry [immediate] void RecvMsg(CkReductionMsg *);
	 entry void RecvMsg(CkReductionMsg *);
	
  };

};
