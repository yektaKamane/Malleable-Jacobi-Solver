module CkLocation {
  extern module CkMarshall;

  message CkArrayElementMigrateMessage {
	double packData[];
  };

  group [migratable] CkLocMgr {
	entry CkLocMgr(CkGroupID map,CkGroupID _lbdb,CkArrayIndexMax numInitial);
	entry void deliverInline(CkMessage *m);
	entry [expedited] void immigrate(CkArrayElementMigrateMessage *msg);
	entry [expedited] void updateLocation(CkArrayIndexMax idx,int nowOnPe);
	entry void reclaimRemote(CkArrayIndexMax idx,int deletedOnPe);
	
	//Load balancing:
	entry void dummyAtSync(void);
  };
  initnode void _CkLocMgrInit(void);
  
//Array Map object support:
  group [migratable] CkArrayMap {
  };

  readonly CkGroupID _defaultArrayMapID;

  group [migratable] DefaultArrayMap : CkArrayMap {
    entry DefaultArrayMap(void);
  };

  group [migratable] RRMap : CkArrayMap {
    entry RRMap(void);
  };

  group [migratable] BlockMap : RRMap {
    entry BlockMap(void);
  };
  group [migratable] CldMap : CkArrayMap {
    entry CldMap(void);
  };

 group [migratable] ConfigurableRRMap : RRMap {
    entry ConfigurableRRMap(void);
  };


  initnode void _propMapInit(void);
  initproc void _CkMigratable_initInfoInit(void);

  group [migratable] PropMap : CkArrayMap {
    entry PropMap(void);
  };

  mainchare CkMapsInit {
    entry CkMapsInit(CkArgMsg *m);
  };
};
