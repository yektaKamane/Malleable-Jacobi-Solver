Now you can compile charm++ under Windows9x/2000/NT with Cygwin.
Note: This version of cygwin is still under testing.
Check the FAQ at end of this file for more help.


--- Setup and Compilation ---

To compile charm on cygwin:
1. install cygwin from: http://sourceware.cygnus.com/cygwin
   with inetutils, openssh, w32api packages and gcc of course. Remember to
   choose default file type as "unix" at the beginning of cygwin installation.

2. before compiling, make sure you have /bin/sh correctly installed, otherwise
   make a link from /bin/bash.exe:  ln -s /bin/bash.exe /bin/sh.exe
   compile charm++:    ./build charm++ net-cygwin

3. setting up running environment:
   There are several ways to do this, using rsh or ssh. 
   Under Windows2000/NT, ssh is recommended, I once had difficulty to have 
   inetd working.
   Starting from Charm++ <version>, you no longer need rshd or sshd to start
   charm program on local machine. This is for testing purpose though, for 
   best performance, launch one process per processor with rsh daemons.

 ** RSH **
   setup /etc/inetd.conf and /etc/services to start rshd, 
   Here is an example of /etc/inetd.conf:

###
shell stream tcp nowait.1000  root /usr/sbin/in.rshd  in.rshd
###

   and an example of /etc/services:

###   
shell     514/tcp    cmd
###

   before running charm program, start 'inetd' first to get rshd running.
   run 'inetd -d' to see the debug information.

 ** SSH **
   Check /etc/passwd, make sure your home directory is correct. (it may be
   empty there!)
   run "/usr/bin/ssh-config" to setup all ssh config files.
   Setup ~/.shosts, or add your public key to your ~/.ssh/authorized_keys to 
   allow you to login without password authentication.
   now you can start sshd and run charm programs.

 ** run only on local machine **
     This allow a user to run charm program on his desktop machine for testing 
   purpose without the hassle of setting up any rsh deamons. To launch a 
   charm++ program on your local machine, use "++local" option via:
  
     ./charmrun +p4 ++local ./pgm

4. If you have any problem with it, please check the FAQ below for help.
   Let me know if it works or not by sending email to (ppl@uiuc.edu).

--- FAQ ---

 * Why would I use net-cygwin version?

   First cygwin is free, it comes with free gcc compiler, cvs and openSSH.
   You don't need expensive Visual C++ compiler to get work done. For unix 
   fans, it is also a good idea to just turn your windows box to a unix 
   workspace, and learn and run charm++ program uniformly on all platforms.

 * How to get your latest version of Charm++?

   You can use anonymous cvs login to checkout the latest version of charm.
   (It may not be the latest stable version though)
   1. login the cvs server:

      cvs -d :pserver:checkout@thrift.cs.uiuc.edu:/expand6/cvsroot login

      when CVS passwd is prompted, just type Enter.
   2. checkout charm

      cvs co charm

      You should get latest charm source tree.
   3. logout the cvs server

      cvs logout

 * Problem: Charm++ build script stops when it compile "ckfutures.ci", with 
   error message: "Syntax error at line 1: parse error"

   This happens when the .ci files have strange characters like '^M' at end
   of each line. Don't use WinCVS to checkout charm because it will append
   '^M' for each line. Use the cvs that comes free from cygwin.



